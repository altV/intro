class Grammar
  Vim = Grammar.new :vim,
    'append'    => ->(w) { `xte 'str a'` },
    'around'    => ->(w) { `xte 'str a'` },
    'big back'  => ->(w) { `xte 'str B'` },
    'back'      => ->(w) { `xte 'str b'` },
    'change'    => ->(w) { `xte 'str c'` },
    'delete'    => ->(w) { `xte 'str d'` },
    'big end'   => ->(w) { `xte 'str E'` },
    'end'       => ->(w) { `xte 'str e'` },
    'fetch back'=> ->(w) { `xte 'str F'` },
    'fetch'     => ->(w) { `xte 'str f'` },
    'file'      => ->(w) { `xte 'str f'` },
    'find'      => ->(w) { `xte 'str /'` },
    'Goff'      => ->(w) { `xte 'str G'` },
    'go'        => ->(w) { `xte 'str g'` },
    'inside'    => ->(w) { `xte 'str i'` },
    'insert'    => ->(w) { `xte 'str i'` },
    'mark'      => ->(w) { `xte 'str m'` },
    'next'      => ->(w) { `xte 'str n'` },
    #'open'      => ->(w) { `xte 'str o'` },
    'paste'     => ->(w) { `xte 'str p'` },
    'replace'   => ->(w) { `xte 'str r'` },
    'surround'  => ->(w) { `xte 'str s'` },
    'till'      => ->(w) { `xte 'str t'` },
    'oops'      => ->(w) { `xte 'str u'` },
    'visual'    => ->(w) { `xte 'str v'` },
    'big word'  => ->(w) { `xte 'str W'` },
    'word'      => ->(w) { `xte 'str w'` },
    'yank'      => ->(w) { `xte 'str y'` },

    'tree'      => ->(w) { `xte 'str :NERDTreeToggle' 'key Return'` },
    'open'      => ->(w) { `xte 'str :CtrlP .' 'key Return'` },

    'first'      => ->(w) { `xte 'str g1'` },
    'second'      => ->(w) { `xte 'str g2'` },
    'third'      => ->(w) { `xte 'str g3'` },
    'fourth'      => ->(w) { `xte 'str g4'` },

    'save'      => ->(w) { `xte 'key Return'` },
    'break'     => ->(w) { `xte 'keydown Control_L' 'key c' 'keyup Control_L'` },
    'exit'      => ->(w) { `xte 'keydown Control_L' 'key d' 'keyup Control_L'` }

end
